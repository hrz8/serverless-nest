{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "inputs": [
        {
            "id": "slsFunctionName",
            "type": "pickString",
            "options": [
                "someFunction"
            ],
            "description": "Which FUNCTION you want to invoke from your local serverless?"
        },
        {
            "id": "slsFunctionMessage",
            "type": "promptString",
            "description": "What MESSAGE you want to send to invoke your local serverless function?"
        }
    ],
    "configurations": [
        {
            "type": "node",
            "request": "launch",
            "name": "Launch Serverless Local ðŸ§©",
            "skipFiles": [
                "<node_internals>/**"
            ],
            "program": "${workspaceFolder}/node_modules/serverless/bin/serverless",
            "args": [
                "offline",
                "--httpPort",
                "4099", // can use input
                "--stage",
                "dev", // can use input
                "--skipCacheInvalidation",
                "--noTimeout"
            ],
            "env": {
                "SLS_DEBUG": "*"
            },
            "console": "integratedTerminal"
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Invoke Serverless Local ðŸ¥Š",
            "skipFiles": [
                "<node_internals>/**"
            ],
            "program": "${workspaceFolder}/node_modules/serverless/bin/serverless",
            "args": [
                "invoke",
                "local",
                "-f",
                "${input:slsFunctionName}",
                "--stage",
                "dev", // can use input
                "--data",
                "${input:slsFunctionMessage}"
            ],
            "env": {
                "SLS_DEBUG": "*"
            },
            "console": "integratedTerminal"
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Launch Nest Server ðŸ˜¸",
            "args": [
                "${workspaceFolder}/src/server.ts"
            ],
            "runtimeArgs": [
                "--nolazy",
                "-r",
                "ts-node/register",
                "-r",
                "tsconfig-paths/register"
            ],
            "sourceMaps": true,
            "cwd": "${workspaceRoot}",
            "protocol": "inspector",
            "console": "integratedTerminal"
        }
    ]
}